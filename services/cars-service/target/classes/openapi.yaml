openapi: 3.0.0
info:
  title: Cars Service API
  description: API for managing vehicles, and users in a rental system
  version: 1.0.0

servers:
  - url: http://localhost:9102

#CARS - SERVICE

paths:
  /api/cars:
    post:
      summary: Create a Car
      operationId: createCar
      requestBody:
        description: List of car requests
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CarRequest'
      responses:
        '201':
          description: Car created successfully
        '400':
          description: Invalid request data
    get:
      summary: Get All Cars
      operationId: getAllCars
      responses:
        '200':
          description: List of cars
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CarResponse'

  /api/cars/{vin}:
    parameters:
      - name: vin
        in: path
        required: true
        schema:
          type: integer
        description: VIN of the car

    get:
      summary: Get Car by VIN
      operationId: getCarById
      responses:
        '200':
          description: Car details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarResponse'
        '404':
          description: Car not found

    delete:
      summary: Delete Car by VIN
      operationId: deleteCar
      responses:
        '200':
          description: Car deleted successfully
        '404':
          description: Car not found

  /api/cars/{carId}:
    parameters:
      - name: carId
        in: path
        required: true
        schema:
          type: integer
        description: ID of the car

    put:
      summary: Update Car
      operationId: updateCar
      requestBody:
        description: Car request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarRequest'
      responses:
        '200':
          description: Car updated successfully
        '400':
          description: Invalid request data

  /api/cars/by-make:
    get:
      summary: Get Cars by Make
      operationId: getCarsByMake
      parameters:
        - name: make
          in: query
          required: true
          schema:
            type: string
          description: Make of the car
      responses:
        '200':
          description: List of cars by make
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CarResponse'

  /api/cars/by-year:
    get:
      summary: Get Cars by Year
      operationId: getCarsByYear
      parameters:
        - name: year
          in: query
          required: true
          schema:
            type: integer
          description: Year of the car
      responses:
        '200':
          description: List of cars by year
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CarResponse'

  /api/cars/by-color:
    get:
      summary: Get Cars by Color
      operationId: getCarsByColor
      parameters:
        - name: color
          in: query
          required: true
          schema:
            type: string
          description: Color of the car
      responses:
        '200':
          description: List of cars by color
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CarResponse'

  /api/cars/average-mileage:
    get:
      summary: Calculate Average Mileage
      operationId: calculateAverageMileage
      responses:
        '200':
          description: Average mileage
          content:
            application/json:
              schema:
                type: number

  /api/cars/cheapest-car:
    get:
      summary: Find Cheapest Car
      operationId: findCheapestCar
      responses:
        '200':
          description: Cheapest car details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarResponse'

  /api/cars/most-expensive-car:
    get:
      summary: Find Most Expensive Car
      operationId: findMostExpensiveCar
      responses:
        '200':
          description: Most expensive car details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarResponse'

  /api/cars/newest-car:
    get:
      summary: Find Newest Car
      operationId: findNewestCar
      responses:
        '200':
          description: Newest car details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarResponse'

  /api/cars/oldest-car:
    get:
      summary: Find Oldest Car
      operationId: findOldestCar
      responses:
        '200':
          description: Oldest car details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarResponse'

components:
  schemas:
    CarRequest:
      type: object
      properties:
        make:
          type: string
        model:
          type: string
        year:
          type: integer
        color:
          type: string
        mileage:
          type: number
      required:
        - make
        - model
        - year

    CarResponse:
      type: object
      properties:
        vin:
          type: integer
        make:
          type: string
        model:
          type: string
        year:
          type: integer
        color:
          type: string
        mileage:
          type: number

