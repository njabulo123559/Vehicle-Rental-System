{
   "openapi": "3.0.3",
   "info": {
      "title": "Vehicle Rental System API",
      "description": "API for managing vehicles, and users in a rental system",
      "version": "1.2"
   },
   "servers": [
      {
         "url": "http://localhost:8080"
      },
      {
         "url": "http://localhost:{port}",
         "variables": {
            "port": {
               "enum": [
                  "9001",
                  "9002",
                  "9003"
               ],
               "default": "8080"
            }
         }
      }
   ],
   "paths": {
      "/api/cars": {
         "post": {
            "summary": "Create a Car",
            "operationId": "createCar",
            "requestBody": {
               "description": "List of car requests",
               "required": true,
               "content": {
                  "application/json": {
                     "schema": {
                        "type": "array",
                        "items": {
                           "$ref": "#/components/schemas/CarRequest"
                        }
                     }
                  }
               }
            },
            "responses": {
               "201": {
                  "description": "Car created successfully"
               },
               "400": {
                  "description": "Invalid request data"
               }
            }
         },
         "get": {
            "summary": "Get All Cars",
            "operationId": "getAllCars",
            "responses": {
               "200": {
                  "description": "List of cars",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/CarResponse"
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/api/cars/{vin}": {
         "parameters": [
            {
               "name": "vin",
               "in": "path",
               "required": true,
               "schema": {
                  "type": "integer"
               },
               "description": "VIN of the car"
            }
         ],
         "get": {
            "summary": "Get Car by VIN",
            "operationId": "getCarById",
            "responses": {
               "200": {
                  "description": "Car details",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/CarResponse"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Car not found"
               }
            }
         },
         "delete": {
            "summary": "Delete Car by VIN",
            "operationId": "deleteCar",
            "responses": {
               "200": {
                  "description": "Car deleted successfully"
               },
               "404": {
                  "description": "Car not found"
               }
            }
         }
      },
      "/api/cars/{carId}": {
         "parameters": [
            {
               "name": "carId",
               "in": "path",
               "required": true,
               "schema": {
                  "type": "integer"
               },
               "description": "ID of the car"
            }
         ],
         "put": {
            "summary": "Update Car",
            "operationId": "updateCar",
            "requestBody": {
               "description": "Car request",
               "required": true,
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/CarRequest"
                     }
                  }
               }
            },
            "responses": {
               "200": {
                  "description": "Car updated successfully"
               },
               "400": {
                  "description": "Invalid request data"
               }
            }
         }
      },
      "/api/cars/by-make": {
         "get": {
            "summary": "Get Cars by Make",
            "operationId": "getCarsByMake",
            "parameters": [
               {
                  "name": "make",
                  "in": "query",
                  "required": true,
                  "schema": {
                     "type": "string"
                  },
                  "description": "Make of the car"
               }
            ],
            "responses": {
               "200": {
                  "description": "List of cars by make",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/CarResponse"
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/api/cars/by-year": {
         "get": {
            "summary": "Get Cars by Year",
            "operationId": "getCarsByYear",
            "parameters": [
               {
                  "name": "year",
                  "in": "query",
                  "required": true,
                  "schema": {
                     "type": "integer"
                  },
                  "description": "Year of the car"
               }
            ],
            "responses": {
               "200": {
                  "description": "List of cars by year",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/CarResponse"
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/api/cars/by-color": {
         "get": {
            "summary": "Get Cars by Color",
            "operationId": "getCarsByColor",
            "parameters": [
               {
                  "name": "color",
                  "in": "query",
                  "required": true,
                  "schema": {
                     "type": "string"
                  },
                  "description": "Color of the car"
               }
            ],
            "responses": {
               "200": {
                  "description": "List of cars by color",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/CarResponse"
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/api/cars/average-mileage": {
         "get": {
            "summary": "Calculate Average Mileage",
            "operationId": "calculateAverageMileage",
            "responses": {
               "200": {
                  "description": "Average mileage",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "number"
                        }
                     }
                  }
               }
            }
         }
      },
      "/api/cars/cheapest-car": {
         "get": {
            "summary": "Find Cheapest Car",
            "operationId": "findCheapestCar",
            "responses": {
               "200": {
                  "description": "Cheapest car details",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/CarResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/api/cars/most-expensive-car": {
         "get": {
            "summary": "Find Most Expensive Car",
            "operationId": "findMostExpensiveCar",
            "responses": {
               "200": {
                  "description": "Most expensive car details",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/CarResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/api/cars/newest-car": {
         "get": {
            "summary": "Find Newest Car",
            "operationId": "findNewestCar",
            "responses": {
               "200": {
                  "description": "Newest car details",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/CarResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/api/cars/oldest-car": {
         "get": {
            "summary": "Find Oldest Car",
            "operationId": "findOldestCar",
            "responses": {
               "200": {
                  "description": "Oldest car details",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/CarResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/api/users": {
         "post": {
            "summary": "Add Users",
            "operationId": "addUser",
            "description": "Add one or more users to the system.",
            "requestBody": {
               "description": "List of user requests",
               "required": true,
               "content": {
                  "application/json": {
                     "schema": {
                        "type": "array",
                        "items": {
                           "$ref": "#/components/schemas/UserRequest"
                        }
                     }
                  }
               }
            },
            "responses": {
               "201": {
                  "description": "Users added successfully"
               },
               "400": {
                  "description": "Invalid request data"
               }
            }
         },
         "get": {
            "summary": "Get All Users",
            "operationId": "getAllUsers",
            "description": "Get a list of all users in the system.",
            "responses": {
               "200": {
                  "description": "List of user details",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/UserResponse"
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/api/users/{id}": {
         "get": {
            "summary": "Get User by ID",
            "operationId": "getUserById",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "schema": {
                     "type": "integer"
                  },
                  "description": "ID of the user"
               }
            ],
            "responses": {
               "200": {
                  "description": "User details",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/UserResponse"
                        }
                     }
                  }
               },
               "404": {
                  "description": "User not found"
               }
            }
         },
         "delete": {
            "summary": "Remove User by ID",
            "operationId": "removeUser",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "schema": {
                     "type": "integer"
                  },
                  "description": "ID of the user"
               }
            ],
            "responses": {
               "200": {
                  "description": "User removed successfully"
               },
               "404": {
                  "description": "User not found"
               }
            }
         },
         "put": {
            "summary": "Update User",
            "operationId": "updateUser",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "schema": {
                     "type": "integer"
                  },
                  "description": "ID of the user to update"
               }
            ],
            "requestBody": {
               "description": "User request",
               "required": true,
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/UserRequest"
                     }
                  }
               }
            },
            "responses": {
               "200": {
                  "description": "User updated successfully"
               },
               "400": {
                  "description": "Invalid request data"
               }
            }
         }
      },
      "/api/reservations": {
         "post": {
            "summary": "Add Reservations",
            "operationId": "addReservation",
            "description": "Add one or more reservations to the system.",
            "requestBody": {
               "description": "List of reservation requests",
               "required": true,
               "content": {
                  "application/json": {
                     "schema": {
                        "type": "array",
                        "items": {
                           "$ref": "#/components/schemas/ReservationRequest"
                        }
                     }
                  }
               }
            },
            "responses": {
               "201": {
                  "description": "Reservations created successfully"
               },
               "400": {
                  "description": "Invalid request data"
               }
            }
         },
         "get": {
            "summary": "Get All Reservations",
            "operationId": "getAllReservations",
            "description": "Get a list of all reservations in the system.",
            "responses": {
               "200": {
                  "description": "List of reservation details",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/ReservationResponse"
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/api/reservations/{id}": {
         "get": {
            "summary": "Get Reservation by ID",
            "operationId": "getReservationById",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "schema": {
                     "type": "integer"
                  },
                  "description": "ID of the reservation"
               }
            ],
            "responses": {
               "200": {
                  "description": "Reservation details",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ReservationResponse"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Reservation not found"
               }
            }
         },
         "delete": {
            "summary": "Remove Reservation by ID",
            "operationId": "removeReservation",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "schema": {
                     "type": "integer"
                  },
                  "description": "ID of the reservation"
               }
            ],
            "responses": {
               "200": {
                  "description": "Reservation removed successfully"
               },
               "404": {
                  "description": "Reservation not found"
               }
            }
         },
         "put": {
            "summary": "Update Reservation",
            "operationId": "updateReservation",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "schema": {
                     "type": "integer"
                  },
                  "description": "ID of the reservation to update"
               }
            ],
            "requestBody": {
               "description": "Reservation request",
               "required": true,
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/ReservationRequest"
                     }
                  }
               }
            },
            "responses": {
               "200": {
                  "description": "Reservation updated successfully"
               },
               "400": {
                  "description": "Invalid request data"
               }
            }
         }
      }
   },
   "components": {
      "schemas": {
         "CarRequest": {
            "type": "object",
            "properties": {
               "make": {
                  "type": "string"
               },
               "model": {
                  "type": "string"
               },
               "year": {
                  "type": "integer"
               },
               "color": {
                  "type": "string"
               },
               "mileage": {
                  "type": "number"
               },
               "price": {
                  "type": "number"
               },
               "ownerId": {
                  "type": "integer"
               },
               "engine": {
                  "type": "string"
               },
               "transmission": {
                  "type": "string"
               },
               "fuelType": {
                  "type": "string"
               },
               "features": {
                  "type": "array",
                  "items": {
                     "type": "string"
                  }
               }
            },
            "required": [
               "make",
               "model",
               "year"
            ]
         },
         "CarResponse": {
            "type": "object",
            "properties": {
               "vin": {
                  "type": "integer"
               },
               "make": {
                  "type": "string"
               },
               "model": {
                  "type": "string"
               },
               "year": {
                  "type": "integer"
               },
               "color": {
                  "type": "string"
               },
               "mileage": {
                  "type": "number"
               },
               "price": {
                  "type": "number"
               },
               "ownerId": {
                  "type": "integer"
               },
               "engine": {
                  "type": "string"
               },
               "transmission": {
                  "type": "string"
               },
               "fuelType": {
                  "type": "string"
               },
               "features": {
                  "type": "array",
                  "items": {
                     "type": "string"
                  }
               }
            }
         },
         "UserRequest": {
            "type": "object",
            "properties": {
               "firstName": {
                  "type": "string"
               },
               "lastName": {
                  "type": "string"
               },
               "dateOfBirth": {
                  "type": "string"
               },
               "rsaId": {
                  "type": "string"
               }
            },
            "required": [
               "firstName",
               "lastName",
               "dateOfBirth",
               "rsaId"
            ]
         },
         "UserResponse": {
            "type": "object",
            "properties": {
               "id": {
                  "type": "integer"
               },
               "firstName": {
                  "type": "string"
               },
               "lastName": {
                  "type": "string"
               },
               "dateOfBirth": {
                  "type": "string"
               },
               "rsaId": {
                  "type": "string"
               }
            }
         },
         "ReservationRequest": {
            "type": "object",
            "properties": {
               "userId": {
                  "type": "integer"
               },
               "carId": {
                  "type": "integer"
               },
               "fromDate": {
                  "type": "string",
                  "format": "date"
               },
               "toDate": {
                  "type": "string",
                  "format": "date"
               },
               "pickUpLocation": {
                  "type": "string"
               },
               "dropoffLocation": {
                  "type": "string"
               }
            },
            "required": [
               "userId",
               "carId",
               "fromDate",
               "toDate",
               "pickUpLocation",
               "dropOffLocation"
            ]
         },
         "ReservationResponse": {
            "type": "object",
            "properties": {
               "id": {
                  "type": "integer"
               },
               "userId": {
                  "type": "integer"
               },
               "carId": {
                  "type": "integer"
               },
               "fromDate": {
                  "type": "string",
                  "format": "date"
               },
               "toDate": {
                  "type": "string",
                  "format": "date"
               },
               "pickUpLocation": {
                  "type": "string"
               },
               "dropoffLocation": {
                  "type": "string"
               }
            }
         }
      }
   }
}